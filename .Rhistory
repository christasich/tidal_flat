library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = .003
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,'./data/interim/tides.feather')
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,'./data/interim/tides_0_slr.feather')
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0.003
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,'./data/interim/tides_%s_slr.feather', slr)
write_feather(tides,sprintf('./data/interim/tides_%s_slr.feather', slr))
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0.005
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,sprintf('./data/interim/tides_%s_slr.feather', slr))
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0.008
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,sprintf('./data/interim/tides_%s_slr.feather', slr))
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0.01
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,sprintf('./data/interim/tides_%s_slr.feather', slr))
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0.015
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,sprintf('./data/interim/tides_%s_slr.feather', slr))
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0.02
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,sprintf('./data/interim/tides_%s_slr.feather', slr))
library(lubridate)
library(tidyverse)
library(tsibble)
library(oce)
library(gridExtra)
library(xts)
library(feather)
# Set working dir
setwd("C:/Projects/tidal_flat_0d")
# Read data from csv
pressure = read.csv("data/interim/sutarkhali_pressure.csv")
# Filter NaNs and normalize by mean
pressure = pressure %>%
filter(Pressure != "NaN") %>%
filter(Datetime != "NA") %>%
mutate(Pressure = Pressure - mean(Pressure)) %>%
mutate(Datetime = mdy_hms(Datetime, tz = "Asia/Dhaka")) %>%
as_tsibble(index = Datetime)
tides.sl = as.sealevel(elevation = pressure$Pressure, time = pressure$Datetime)
mod = tidem(t = tides.sl)
run_length = 50 #years
dt = "3 hours"
index = seq.POSIXt(pressure$Datetime[1], pressure$Datetime[1] + years(run_length), by = dt)
slr = 0.05
end_sl = run_length * slr
sl_vec = seq(0, end_sl, length.out = length(index))
tides = tibble(Datetime = index) %>%
as_tsibble(index = Datetime) %>%
arrange(Datetime)
tides$pressure = predict(mod, newdata=index)
tides$pressure = tides$pressure + sl_vec
write_feather(tides,sprintf('./data/interim/tides_%s_slr.feather', slr))
library(plotly)
pdata = read_csv('out.csv')
View(pdata)
p = plot_ly(z = z)
p = plot_ly(z = pdata$z)
p = plot_ly(z = pdata$z) %>%
add_surface()
library(akima)
install.packages('akima')
library(akima)
s = interp(pdata$y,pdata$x,pdata$z)
image.plot(s)
library(fields)
install.packages('fields')
library(fields)
image.plot(s)
s = interp(pdata$x,pdata$y,pdata$z)
image.plot(s)
View(pdata)
pdata = read_csv('out.csv')
library(akima)
s = interp(pdata$x,pdata$y,pdata$z)
pdata = read_csv('out.csv')
library(akima)
s = interp(pdata$x,pdata$y,pdata$z)
image.plot(s)
pdata = read_csv('new.csv')
library(akima)
s = interp(pdata$ssc,pdata$slr,pdata$inundation)
image.plot(s)
View(pdata)
